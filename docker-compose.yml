services:
  web:
    image: ${DOCKER_REGISTRY-}omcleanarch.api
    build:
      context: .
      dockerfile: src/Web.Api/Dockerfile
    ports:
      - 7800:7800
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:7800
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://aspire:18889
    depends_on:
      - om-postgres

  seq:
    image: datalust/seq:latest
    ports:
      - "5341:5341"
      - "8081:80"
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_NOAUTHENTICATION=true
    volumes:
      - ./seq-data:/data

  om-postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgrespw
    ports:
      - "5432:5432"
    volumes:
      - ./.containers/db:/var/lib/postgresql/data

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongopw
      ME_CONFIG_MONGODB_URL: mongodb://root:mongopw@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongodb

  rabbitmq:
    image: rabbitmq:4-management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"
  aspire:
    image: mcr.microsoft.com/dotnet/aspire-dashboard:latest
    ports:
      - "18888:18888" # Dashboard UI
      - "18889:18889" # OTLP gRPC
      - "18890:18890" # OTLP HTTP

volumes:
  mongodata:
