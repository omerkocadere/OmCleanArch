services:
  cleanarch:
    image: zormax/cleanarch:latest
    build:
      context: .
      dockerfile: src/Web.Api/Dockerfile
    ports:
      - 7800:7800
    env_file:
      - .env.docker
    depends_on:
      - postgres
      - rabbitmq

  seq:
    image: datalust/seq:latest
    ports:
      - "5341:5341"
      - "8081:80"
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_NOAUTHENTICATION=true
    volumes:
      - ./seq-data:/data

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgrespw
    ports:
      - "5432:5432"
    volumes:
      - ./.containers/db:/var/lib/postgresql/data

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongopw
      ME_CONFIG_MONGODB_URL: mongodb://root:mongopw@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongodb

  rabbitmq:
    image: rabbitmq:4-management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"

  aspire:
    image: mcr.microsoft.com/dotnet/aspire-dashboard:latest
    ports:
      - "18888:18888" # Dashboard UI
      - "18889:18889" # OTLP gRPC
      - "18890:18890" # OTLP HTTP

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8083:8081"
    depends_on:
      - redis

  search-svc:
    image: zormax/search-svc:latest
    build:
      context: .
      dockerfile: other-services/SearchService/Dockerfile
    ports:
      - 7801:7800
    env_file:
      - .env.docker
    depends_on:
      - mongodb
      - rabbitmq

  identity-svc:
    image: zormax/identity-svc:latest
    build:
      context: .
      dockerfile: other-services/IdentityService/Dockerfile
    ports:
      - 7802:7800
    env_file:
      - .env.docker
    depends_on:
      - postgres

  gateway-svc:
    image: zormax/gateway-svc:latest
    build:
      context: .
      dockerfile: other-services/GatewayService/Dockerfile
    ports:
      - 7803:7800
    env_file:
      - .env.docker
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker

volumes:
  mongodata:
