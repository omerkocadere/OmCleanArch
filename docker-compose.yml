services:
  web:
    image: ${DOCKER_REGISTRY-}omcleanarch.api
    build:
      context: .
      dockerfile: src/Web/Dockerfile
    ports:
      - 7800:7800
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:7800
      - OTEL_EXPORTER_OTLP_ENDPOINT=https://otlp-gateway-prod-eu-central-0.grafana.net/otlp
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - OTEL_EXPORTER_OTLP_HEADERS=Authorization=Basic MTMwODc0OTpnbGNfZXlKdklqb2lNVFEzTmpBM05TSXNJbTRpT2lKemRHRmpheTB4TXpBNE56UTVMVzkwYkhBdGQzSnBkR1V0YjIxamJHVmhibUZ5WTJndGRHOXJaVzRpTENKcklqb2lPVEJNUVRKUE5XWkdORXBwZFRGbGRtSTVPWHBPUWpjNElpd2liU0k2ZXlKeUlqb2ljSEp2WkMxbGRTMWpaVzUwY21Gc0xUQWlmWDA9
    depends_on:
      - postgres

  seq:
    image: datalust/seq:latest
    ports:
      - "5341:5341"
      - "8081:80"
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_NOAUTHENTICATION=true
    volumes:
      - ./seq-data:/data

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgrespw
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  aspire:
    image: mcr.microsoft.com/dotnet/aspire-dashboard:latest
    ports:
      - "18888:18888" # Dashboard UI
      - "18889:18889" # OTLP gRPC
      - "18890:18890" # OTLP HTTP

volumes:
  pgdata:
